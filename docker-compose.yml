version: "3.5"
services:
  rinha-api-01: # API - Instância 01
    image: rinhadebackend.api
    build:
      context: src
      dockerfile: RinhaDeBackEnd.API/Dockerfile
    hostname: rinha-api-01
    depends_on:
      - db
    expose:
      - "80"
    environment:
      - DB_CONNECTION_STRING=Host=db;Username=admin;Password=postgrespw;Database=rinha;
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    networks:
      - rinha-network

  rinha-api-02: # API - Instância 02
    image: rinhadebackend.api
    build:
      context: src
      dockerfile: RinhaDeBackEnd.API/Dockerfile
    hostname: rinha-api-02
    depends_on:
      - db
    expose:
      - "80"
    environment:
      - DB_CONNECTION_STRING=Host=db:5432;Username=admin;Password=postgrespw;Database=rinha;
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    networks:
      - rinha-network

  nginx: # Load Balancer
    image: nginx:latest
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rinha-api-01
      - rinha-api-02
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
    networks:
      - rinha-network

  db: # Banco de dados
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - "./scripts/data.sql:/docker-entrypoint-initdb.d/data.sql"
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5GB"
    restart: "always"
    networks:
      - rinha-network

networks:
  rinha-network:
    driver: bridge
